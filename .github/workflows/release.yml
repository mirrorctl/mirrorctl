name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Fetch full history for changelog generation
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          cache: true

      - name: Install syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          # Uncomment if you plan to push Docker images to GitHub Container Registry
          # REGISTRY_USERNAME: ${{ github.actor }}
          # REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign release artifacts
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" | base64 -d > cosign.key

          # Sign archives
          for archive in dist/*.tar.gz; do
            if [ -f "$archive" ]; then
              echo "Signing $archive"
              cosign sign-blob --key cosign.key --output-signature "${archive}.sig" "$archive"
            fi
          done

          # Sign checksums file
          if [ -f dist/checksums.txt ]; then
            echo "Signing checksums.txt"
            cosign sign-blob --key cosign.key --output-signature dist/checksums.txt.sig dist/checksums.txt
          fi

          # Sign SBOM files
          for sbom in dist/*.spdx.json dist/*.cyclonedx.json; do
            if [ -f "$sbom" ]; then
              echo "Signing $sbom"
              cosign sign-blob --key cosign.key --output-signature "${sbom}.sig" "$sbom"
            fi
          done

          rm cosign.key

      - name: Upload signatures to release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          for sig in dist/*.sig; do
            if [ -f "$sig" ]; then
              echo "Uploading $sig"
              gh release upload ${{ github.ref_name }} "$sig"
            fi
          done

  # Optional: Build and test on multiple platforms before release
  test-build:
    name: Test Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest ]
        go-version: ['1.24']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Build
        run: go build -v ./cmd/mirrorctl
