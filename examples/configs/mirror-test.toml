####################
## Global Options ##

dir = "/home/$USER/mirrorctl/examples/mirror-data/"
max_conns = 10


##########################
## Mirror Configuration ##

[mirrors.amlfs-noble]
url = "https://packages.microsoft.com/repos/amlfs-noble/"
pgp_key_path = "/home/$USER/mirrorctl/examples/keys/microsoft.asc"
architectures = ["amd64"]
mirror_source = false
publish_to_staging = true
sections = ["main"]
suites = ["noble"]

    [mirrors.amlfs-noble.filters]
    keep_versions = 1
    exclude_patterns = ["code-insiders","code-exploration"]

    [mirrors.amlfs-noble.snapshot]
    default_name_format = "2006-01-02"

    [mirrors.amlfs-noble.snapshot.prune]
    keep_last = 30
    keep_within = "2d"

[mirrors.openenclave]
url = "https://packages.microsoft.com/repos/openenclave/"
pgp_key_path = "/home/$USER/examples/mirrorctl/examples/keys/microsoft.asc"
architectures = ["amd64", "arm64"]
sections = ["main"]
suites = ["bionic"]

    [mirrors.openenclave.filters]
    keep_versions = 1 
    exclude_patterns = ["code-insiders","code-exploration"]

    [mirrors.openenclave.snapshot]
    default_name_format = "2006-01-02"

    [mirrors.openenclave.snapshot.prune]
    keep_last = 3
    keep_within = "30d"


[mirrors.rear]
url = "https://download.opensuse.org/repositories/Archiving:/Backup:/Rear/"
no_pgp_check = true
suites = ["xUbuntu_22.04/", "xUbuntu_24.04/"]


[mirrors.slurm-ubuntu-noble]
url = "https://packages.microsoft.com/repos/slurm-ubuntu-noble/"
pgp_key_path = "/home/$USER/examples/mirrorctl/examples/keys/microsoft.asc"
architectures = ["amd64"]
sections = ["main"]
suites = ["stable"]

    [mirrors.slurm-ubuntu-noble.filters]
    exclude_patterns = ["insiders"]

    [mirrors.slurm-ubuntu-noble.snapshot.prune]
    keep_last = 25 
    keep_within = "60d"


###########################
## Logging Configuration ##

[log]
level = "info"    # debug, info, warn, error (... from most verbose to least verbose)
format = "json"  # plain, text, json


#######################################
## SNAPSHOT CONFIGURATION (OPTIONAL) ##

[snapshot]
path = "/home/$USER/examples/mirrorctl/examples/snapshots/"
default_name_format = "2006-01-02T15-04-05Z" # Go time format

[snapshot.prune]
keep_last = 60
keep_within = "30d"


#######################
## TLS CONFIGURATION ##

[tls]
# Minimum TLS version (1.2 or 1.3) - defaults to 1.2 for compatibility
# Use the `check tls` command for each mirror you connect to. If all of your mirrors support
# tls1.3, you can set this to 1.3.
min_version = "1.2"

# Maximum TLS version (1.2 or 1.3) - leave empty for latest
max_version = ""

# WARNING: Only set to true for testing - this disables certificate verification!
insecure_skip_verify = false

# Custom CA certificate file (optional)
# In short, the ca_cert_file is an escape hatch for environments where you are not connecting
# directly to a public server using a publicly trusted certificate. The certificate file itself is
# provided by the organization that is intercepting the traffic or hosting the private service.
# For any standard connection to a public website from a normal unproxied network, this option
# should remain commented out.
# ca_cert_file = "/etc/ssl/certs/custom-ca.pem"

# Client certificate for mutual TLS authentication (optional)
# You would only use this if the server administrator explicitly told you that mTLS is required
# and gave you the necessary files.
# client_cert_file = "/etc/ssl/certs/client.pem"
# client_key_file = "/etc/ssl/private/client.key"

# Specify allowed cipher suites for extra security (optional)
# Leave commented to use Go's secure defaults
# cipher_suites = [
#     "TLS_AES_256_GCM_SHA384",                   # TLS 1.3
#     "TLS_CHACHA20_POLY1305_SHA256",             # TLS 1.3  
#     "TLS_AES_128_GCM_SHA256",                   # TLS 1.3
#     "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384",    # TLS 1.2
#     "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",  # TLS 1.2
# ]


# Custom server name for SNI (optional)
# It tells the server which website's certificate you are requesting.
# In almost all normal situations the application will automatically set the SNI based on the
# mirror's URL. You can likely leave this commented out.
# server_name = "packages.microsoft.com"
